#!/usr/bin/env bash
# This is a factors challenge

declare -A factors_map=()

# Pre-compute the prime factors for all numbers in the file
while read -r number; do
    factors=$(factor "$number" | awk '{$1=""; print $0}' | sed 's/ //g')
    factors_map["$number"]=$factors
done < "$1"

# Factorize each number in the file
while read -r number; do
    factors=${factors_map["$number"]}
    factors_array=($factors)

    max_factor=${factors_array[-1]}
    second_max_factor=${factors_array[-2]}

    for ((i=${#factors_array[@]}-3; i>=0; i--)); do
        if [ $(echo "${factors_array[$i]}*$second_max_factor" | bc) -gt $(echo "$max_factor*${factors_array[$i+1]}" | bc) ]; then
            break
        fi

        second_max_factor=${factors_array[$i]}
    done

    echo "$number=$max_factor*$second_max_factor"
done < "$1"
